<script type="text/javascript">
  if(!window.rg4js){
    !function(a,b,c,d,e,f,g,h){a.RaygunObject=e,a[e]=a[e]||function(){
    (a[e].o=a[e].o||[]).push(arguments)},f=b.createElement(c),g=b.getElementsByTagName(c)[0],
    f.async=1,f.src=d,g.parentNode.insertBefore(f,g),h=a.onerror,a.onerror=function(b,c,d,f,g){
    h&&h(b,c,d,f,g),g||(g=new Error(b)),a[e].q=a[e].q||[],a[e].q.push({
    e:g})}}(window,document,"script","//cdn.raygun.io/raygun4js/raygun.min.js","rg4js");

  {% if block.settings.raygun-api-key != blank %}
    rg4js('apiKey', '{{ block.settings.raygun-api-key }}');
  {% else %}
    rg4js('apiKey', '{{ shop.metafields.raygun.apikey }}');
  {% endif %}
  }

  rg4js('options', {
    ignore3rdPartyErrors: {{ block.settings.ignore-third-party-errors }}
  });

  {% unless request.design_mode %}
    rg4js('enableCrashReporting', true);
  {% endunless %}
</script>

{% schema %}
{
  "name": "Crash Reporting",
  "target": "head",
  "settings": [
    {
      "type": "text",
      "id": "raygun-api-key",
      "label": "API Key",
      "info": "Optional: Set an API key to override which Raygun Application data is sent to."
    },
    {
      "type": "checkbox",
      "id": "ignore-third-party-errors",
      "label": "Ignore Third-Party Errors",
      "default": true
    }
  ]
}
{% endschema %}